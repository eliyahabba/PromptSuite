// Bulma Slider JavaScript - Placeholder
// Download from: https://github.com/Wikiki/bulma-slider

(function() {
  'use strict';
  
  // Simple slider functionality
  function initSlider() {
    const sliders = document.querySelectorAll('.slider');
    
    sliders.forEach(slider => {
      const track = slider.querySelector('.slider-track');
      const fill = slider.querySelector('.slider-fill');
      const thumb = slider.querySelector('.slider-thumb');
      
      if (!track || !fill || !thumb) return;
      
      let isDragging = false;
      let value = 0;
      
      function updateSlider(clientX) {
        const rect = track.getBoundingClientRect();
        const percentage = Math.max(0, Math.min(100, ((clientX - rect.left) / rect.width) * 100));
        
        value = percentage;
        fill.style.width = percentage + '%';
        thumb.style.left = percentage + '%';
        
        // Dispatch custom event
        slider.dispatchEvent(new CustomEvent('slider-change', {
          detail: { value: percentage }
        }));
      }
      
      thumb.addEventListener('mousedown', (e) => {
        isDragging = true;
        e.preventDefault();
      });
      
      document.addEventListener('mousemove', (e) => {
        if (isDragging) {
          updateSlider(e.clientX);
        }
      });
      
      document.addEventListener('mouseup', () => {
        isDragging = false;
      });
      
      track.addEventListener('click', (e) => {
        if (!isDragging) {
          updateSlider(e.clientX);
        }
      });
    });
  }
  
  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initSlider);
  } else {
    initSlider();
  }
})(); 